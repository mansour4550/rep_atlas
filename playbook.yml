---
- name: Full Apache Atlas Cluster Setup
  hosts: all
  become: yes
  vars:
    atlas_version: "2.4.0"
    solr_version: "8.11.2"
    atlas_user: "hadoopZetta"
    atlas_install_dir: "/opt/apache-atlas-{{ atlas_version }}"
    solr_install_dir: "/opt/solr-{{ solr_version }}"
    zookeeper_quorum: "192.168.10.110:2181,192.168.10.111:2181,192.168.10.112:2181"
    kafka_broker: "192.168.10.113:9092"
    hbase_dir: "/opt/hbase-2.5.5-hadoop3"
    kafka_dir: "/opt/kafka_2.11-2.2.0"
  tasks:
    - name: Ensure hadoopZetta user exists
      user:
        name: "{{ atlas_user }}"
        state: present
        create_home: yes
        shell: /bin/bash

    - name: Install required packages
      apt:
        name: ["maven", "wget", "tar", "curl", "openjdk-8-jdk", "python3"]
        state: present
        update_cache: yes

- name: Start HBase on master1
  hosts: master1
  become: yes
  tasks:
    - name: Start and verify HBase
      block:
        - stat:
            path: "{{ hbase_dir }}/bin/start-hbase.sh"
          register: hbase_installed

        - name: Start HBase
          become_user: "{{ atlas_user }}"
          command: "{{ hbase_dir }}/bin/start-hbase.sh"
          when: hbase_installed.stat.exists

        - name: Wait for HBase to be ready
          become_user: "{{ atlas_user }}"
          command: "{{ hbase_dir }}/bin/hbase shell -c 'status'"
          register: hbase_status
          until: hbase_status.rc == 0
          retries: 5
          delay: 10

        - name: Grant HBase permissions
          become_user: "{{ atlas_user }}"
          command: "echo \"grant 'atlas', 'RWXCA', 'atlas'\" | {{ hbase_dir }}/bin/hbase shell"

- name: Configure Solr on slave1 and edge1
  hosts: slave1,edge1
  become: yes
  tasks:
    - name: Start Solr in cloud mode
      block:
        - stat:
            path: "{{ solr_install_dir }}/bin/solr"
          register: solr_installed

        - name: Start Solr
          become_user: "{{ atlas_user }}"
          command: "{{ solr_install_dir }}/bin/solr start -cloud -z {{ zookeeper_quorum }} -p 8983"
          when: solr_installed.stat.exists

        - name: Wait for Solr to be ready
          become_user: "{{ atlas_user }}"
          wait_for:
            host: "{{ inventory_hostname }}"
            port: 8983
            delay: 5
            timeout: 60

    - name: Create Solr collections (only on slave1)
      become_user: "{{ atlas_user }}"
      command: "{{ solr_install_dir }}/bin/solr create -c {{ item }} -n data-driven-schema-configs"
      when: inventory_hostname == "slave1"
      loop:
        - vertex_index
        - edge_index
        - fulltext_index

- name: Configure Kafka on slave1
  hosts: slave1
  become: yes
  tasks:
    - name: Start Kafka and create topics
      block:
        - stat:
            path: "{{ kafka_dir }}/bin/kafka-server-start.sh"
          register: kafka_installed

        - name: Configure Kafka directories
          file:
            path: "{{ kafka_dir }}/logs"
            state: directory
            mode: '0755'

        - name: Start Kafka
          become_user: "{{ atlas_user }}"
          command: "{{ kafka_dir }}/bin/kafka-server-start.sh -daemon {{ kafka_dir }}/config/server.properties"

        - name: Wait for Kafka
          become_user: "{{ atlas_user }}"
          wait_for:
            host: "{{ kafka_broker.split(':')[0] }}"
            port: "{{ kafka_broker.split(':')[1] }}"
            delay: 5
            timeout: 60

        - name: Create Kafka topics
          become_user: "{{ atlas_user }}"
          command: "{{ kafka_dir }}/bin/kafka-topics.sh --create --topic {{ item }} --bootstrap-server {{ kafka_broker }} --partitions 1 --replication-factor 1"
          loop:
            - ATLAS_HOOK
            - ATLAS_ENTITIES

- name: Deploy Apache Atlas on master nodes
  hosts: master1,master2
  become: yes
  tasks:
    - name: Install and Start Atlas
      block:
        - stat:
            path: "{{ atlas_install_dir }}/bin/atlas_start.py"
          register: atlas_installed

        - name: Download and extract Atlas source
          get_url:
            url: "https://dlcdn.apache.org/atlas/{{ atlas_version }}/apache-atlas-{{ atlas_version }}-sources.tar.gz"
            dest: "/tmp/apache-atlas-{{ atlas_version }}-sources.tar.gz"
            mode: '0644'
          when: not atlas_installed.stat.exists

        - name: Extract Atlas
          unarchive:
            src: "/tmp/apache-atlas-{{ atlas_version }}-sources.tar.gz"
            dest: "/tmp"
            remote_src: yes
          when: not atlas_installed.stat.exists

        - name: Build Atlas
          become_user: "{{ atlas_user }}"
          command: "mvn clean -DskipTests package -Pdist"
          args:
            chdir: "/tmp/apache-atlas-sources-{{ atlas_version }}"
          environment:
            MAVEN_OPTS: "-Xms2g -Xmx2g"
          when: not atlas_installed.stat.exists

        - name: Install Atlas
          unarchive:
            src: "/tmp/apache-atlas-sources-{{ atlas_version }}/distro/target/apache-atlas-{{ atlas_version }}-bin.tar.gz"
            dest: "{{ atlas_install_dir }}"
            remote_src: yes
            extra_opts: ["--strip-components=1"]
          when: not atlas_installed.stat.exists

        - name: Copy default configs
          copy:
            src: "/tmp/apache-atlas-sources-{{ atlas_version }}/conf/"
            dest: "{{ atlas_install_dir }}/conf/"
            remote_src: yes
            mode: '0644'
          when: not atlas_installed.stat.exists

        - name: Start Atlas
          become_user: "{{ atlas_user }}"
          command: "python3 {{ atlas_install_dir }}/bin/atlas_start.py"
          environment:
            DISPLAY: ""
          async: 60
          poll: 0
